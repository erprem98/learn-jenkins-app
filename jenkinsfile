pipeline {
    agent any
         environment{
         NETLIFY_SITE_ID='3ae2ead7-22a3-4066-97d8-ca55a4dc0f08'
         }
    stages {
        stage('AWS')
        {
         agent{
            docker{
                image 'amazon/aws-cli'
                args "--entrypoint=''"
            }
         }
         steps{
            withCredentials([usernamePassword(credentialsId: 'aws-user', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')])
             {
              sh '''
            aws --version
            echo "Hello S3" > index.html
            aws s3 cp index.html s3://learn-jenkins202501120738/index.html
            '''
            }
          
         }
        }

        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }
        

        stage('Tests') {
            parallel {
                stage('Unit tests') {
                    agent {
                        docker {
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
                            #test -f build/index.html
                            npm test
                        '''
                    }
                    // post {
                    //     always {
                    //         junit 'jest-results/junit.xml'
                    //     }
                    // }
                }

                stage('E2E') {
                    agent {
                        docker {
                            image 'my-playwright'
                            reuseNode true
                        }
                    }

                    steps {
                        sh '''
    
                            serve -s build &
                            sleep 10
                            npx playwright test  --reporter=html
                        '''
                    }

                    // post {
                    //     always {
                    //         publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                    //     }
                    // }
                }
            }
        }
        // stage('Approval')
        // {
        //     steps{
        //         timeout(15) 
        //         {
        //       input message: 'Do you wish to deploy in Production?', ok: 'Yes, I am sure'
        //       }   
        //     }}
             

        
        stage('Deploy')
                 {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                //node_modules/.bin/netlify deploy --dir=build --prod
                sh '''

               npm install netlify-cli
              node_modules/.bin/netlify --version
              echo "Deploying to production.. site ID : $NETLIFY_SITE_ID"
              node_modules/.bin/netlify status
              
                '''
            }
        }
    }
}